@model IEnumerable<BudgetBuddy.ViewModels.ReportViewModel>

@{
    ViewData["Title"] = "Reports";
}

<h2>@ViewData["Title"]</h2>
<h2>Hi there! Looking for reports?</h2>

@if (!Model.Any())
{
    <p>No data available for the report.</p>
}
else
{

    <div class="chart-container">
        <ul class="chart">
            @foreach (var dataPoint in Model.Select((value, index) => new { Index = index + 1, Value = value.TotalAmount }))
            {
                var heightPercentage = (dataPoint.Value / Model.Max(m => Math.Abs(m.TotalAmount))) * 100;
                <li>
                    <div class="bar" style="height: @Math.Abs(heightPercentage)%;">
                        <span>@dataPoint.Value</span>
                    </div>
                    <div class="label">@dataPoint.Index</div>
                </li>
            }
        </ul>
        <div class="zero-line"></div>
    </div>

    <div>
        <canvas id="myChart" width="400" height="300"></canvas>
    </div>

    <script src="~/js/Chart.min.js" asp-append-version="true"></script>

    <script>
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: Model.Select((value, index) => (index + 1).ToString()).ToArray(),
                datasets: [{
                    label: 'Total Amount',
                    data: Model.Select(m => m.TotalAmount).ToArray(),
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}


<style>
    .chart-container {
        position: relative;
        height: 300px;
        width: 400px;
        border: 1px solid #e1e1e1;
        padding: 10px;
    }

    .chart {
        position: absolute;
        bottom: 50%; /* Adjust based on where you want the zero line */
        left: 0;
        width: 100%;
        list-style: none;
        padding: 0;
        margin: 0;
    }

        .chart li {
            display: inline-block;
            width: 40px;
            margin-right: 2px;
            vertical-align: bottom;
        }

        .chart .bar {
            display: block;
            width: 100%;
            background: #3498db;
            color: white;
            text-align: center;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
        }

            .chart .bar span {
                position: relative;
                top: -20px;
                left: 0;
                right: 0;
            }

        .chart .label {
            text-align: center;
            margin-top: 5px;
        }

    .zero-line {
        position: absolute;
        left: 0;
        right: 0;
        bottom: 50%; /* This places the line at the middle of the container */
        border-top: 2px solid black;
        z-index: 1;
    }
</style>